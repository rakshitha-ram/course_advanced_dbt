name: 'course_advanced_dbt'
version: '1.0.0'
config-version: 2

profile: 'course_advanced_dbt'

model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
log-path: 'logs'
target-path: 'target'
packages-install-path: 'dbt_packages'

clean-targets:
  - "target"
  - "dbt_packages"

models:
  course_advanced_dbt:
    +materialized: view
    +grants:
      select: ['transformer', 'reporter']

    staging:
      +schema: staging

    intermediate:
      +schema: intermediate

    marts:
      core:
        +schema: core_reporting
      finance:
        +schema: finance
      product:
        +schema: product

  dbt_project_evaluator:
    marts:
      tests:
        # disable entire test coverage suite
        #+enabled: false
      dag:
        # disable single DAG model
        fct_model_fanout:
          +enabled: false

vars:
  dbt_project_evaluator:
    disable:
      - test_name_conventions

seeds:
  dbt_project_evaluator:
    dbt_project_evaluator_exceptions:
      +enabled: false


on-run-end: "{{ dbt_project_evaluator.print_dbt_project_evaluator_issues() }}"

dispatch:
  - macro_namespace: dbt
    search_order:
      - course_advanced_dbt
      - dbt_snowflake_monitoring
      - dbt
query-comment:
  comment: '{{ dbt_snowflake_monitoring.get_query_comment(node) }}'
  append: true
